[1,["33+mOUN+VNqLGufu5CvZym@f9941","19AoXXUxRI1oP/c/oqzMDn","43PgnLPutKC4GfGTc75u7y@f9941","37S8s90NBDRa4YueRv4JUN@f9941","45gWBCYldKy6FatJcMrFUQ","98zpUF40FMjqq07nl8yMlM@6c48a","0d5lrdJZZKz6QhQW4u3YWk@f9941","14vEQ5f4JPM50VyVatXNzT@f9941","fcJIG5kNtKGYp1euLzW6I/","f5GvINUidFUpTiNF1JfBzf","22BPvO5mZAq7t3x35IklTW","59j67kw3ZEn5QZQlMy3QZ7@f9941","6c/HBr90hLZpQ2IziJmkxC@f9941","e2JmxKQJpOvqO41ugfU4b/","842Di9nHxFh65EnhnNAF1U@6c48a","173rzDCmtLirAL3Fi4hVge"],["node","_spriteFrame","_particleSystem","_cameraComponent","loadingUI","scene","_parent","_mainTexture","_defaultClip","prefab","lbVersion","_clip","root","data","effectManager","customerManager","mapManager","fightLoading","followCamera","imgShare","imgVideo","pfTailLine","mainTexture","_effectAsset"],[["cc.Node",["_name","_layer","_id","_components","_parent","_children","_lpos","_prefab","_lscale","_lrot","_euler"],0,9,1,2,5,4,5,5,5],["cc.Node",["_name","_layer","_id","_components","_parent","_lpos","_children","_lrot","_euler"],0,12,1,5,2,5,5],["cc.Widget",["_alignFlags","_alignMode","_name","_originalWidth","_originalHeight","_bottom","_right","_left","_top","node","_target","__prefab"],-6,1,1,4],["cc.UITransform",["_name","node","_contentSize","__prefab"],2,1,5,4],["cc.Node",["_name","_layer","_id","_parent","_components","_lpos","_prefab"],0,1,2,5,4],["cc.Sprite",["_sizeMode","_name","_isTrimmedMode","node","__prefab","_spriteFrame"],0,1,4,6],["cc.Label",["_string","_actualFontSize","_fontSize","_name","_horizontalAlign","_verticalAlign","node","__prefab"],-3,1,4],["cc.Camera",["_visibility","_near","_far","_projection","_priority","_orthoHeight","_clearFlags","_name","node","_color"],-5,1,5],["cc.CurveRange",["constant","mode","constantMin","constantMax"],-1],["cc.PrefabInfo",["fileId","root","asset"],2,1,1],["cc.AmbientInfo",["_skyIllumLDR","_skyIllumHDR","_skyColorHDR","_skyColorLDR","_groundAlbedoHDR","_groundAlbedoLDR"],1,5,5,5,5],["cc.ShadowsInfo",["_bias","_near","_far","_shadowDistance","_saturation","_enabled"],-3],["cc.Layout",["_resizeMode","_layoutType","_enabled","_spacingX","node","__prefab"],-1,1,4],["cc.DirectionalLight",["_illuminanceLDR","_name","_useColorTemperature","_colorTemperature","_illuminanceHDR","node","_staticSettings","_color"],-2,1,4,5],["cc.GradientRange",["_mode","colorMin","colorMax"],2,5,5],["cc.ColorOvertimeModule",["_enable","color"],2,4],["cc.ShapeModule",["arcSpread","length","_enable","_shapeType","arcSpeed"],-1,4],["cc.TrailModule",["_enable","existWithParticles","widthFromParticle","lifeTime","widthRatio","colorOverTrail","colorOvertime","_particleSystem"],0,4,4,4,4,1],["cc.ParticleSystemRenderer",["_renderMode","_mainTexture"],2,6],["99c5fx0klFHq52oGPdZL7Z5",["_name","node","__prefab","lbProgress","lbTips"],2,1,4,1,1],["RenderQueueDesc",["stages","isTransparent","sortMode"],0],"cc.ImageAsset","cc.Texture2D",["cc.EffectAsset",["_name","shaders","techniques"],0],["cc.SceneAsset",["_name"],2],["cc.Canvas",["_name","node","_cameraComponent"],2,1,1],["c5aa7IsWr5A4blPeFPanXM/",["_name","node","lbVersion","loadingUI"],2,1,1,1],["cc.CompPrefabInfo",["fileId"],2],["cc.PrefabLink",["node","prefab"],3,1,6],["cc.Animation",["_name","playOnLoad","node","__prefab","_clips","_defaultClip"],1,1,4,3,6],["cc.Scene",["_name","_children","_prefab","_globals"],2,2,4,4],["cc.SceneGlobals",["ambient","shadows","_skybox","fog","octree"],3,4,4,4,4,4],["cc.SkyboxInfo",[],3],["cc.FogInfo",["_fogColor"],3,5],["cc.OctreeInfo",[],3],["cc.UIMeshRenderer",["node","__prefab"],3,1,4],["98dcdQl8GhEYLJRG8ap+Eh+",["node"],3,1],["cc.AudioSource",["_loop","_playOnAwake","node","_clip"],1,1,6],["cc.StaticLightSettings",[],3],["cc.ParticleSystem",["_name","simulationSpeed","_capacity","node","__prefab","_materials","startColor","startSizeX","startSizeY","startSizeZ","startSpeed","startRotationX","startRotationY","startRotationZ","startDelay","startLifetime","gravityModifier","rateOverTime","rateOverDistance","bursts","_colorOverLifetimeModule","_shapeModule","_sizeOvertimeModule","_velocityOvertimeModule","_forceOvertimeModule","_limitVelocityOvertimeModule","_rotationOvertimeModule","_textureAnimationModule","_trailModule","renderer"],0,1,4,3,4,4,4,4,4,4,4,4,4,4,4,4,4,9,4,4,4,4,4,4,4,4,4,4],["cc.ParticleSystem",["duration","node","__prefab","_materials","startColor","startSizeX","startSizeY","startSizeZ","startSpeed","startRotationX","startRotationY","startRotationZ","startDelay","startLifetime","gravityModifier","rateOverTime","rateOverDistance","bursts","_colorOverLifetimeModule","_shapeModule","_sizeOvertimeModule","_velocityOvertimeModule","_forceOvertimeModule","_limitVelocityOvertimeModule","_rotationOvertimeModule","_textureAnimationModule","_trailModule","renderer"],2,1,4,12,4,4,4,4,4,4,4,4,4,4,4,4,4,9,4,4,4,4,4,4,4,4,4,4],["cc.Burst",["count"],3,4],["cc.SizeOvertimeModule",["size","x","y","z"],3,4,4,4,4],["cc.VelocityOvertimeModule",["x","y","z","speedModifier"],3,4,4,4,4],["cc.ForceOvertimeModule",["x","y","z"],3,4,4,4],["cc.LimitVelocityOvertimeModule",["limitX","limitY","limitZ","limit"],3,4,4,4,4],["cc.RotationOvertimeModule",["x","y","z"],3,4,4,4],["cc.TextureAnimationModule",["frameOverTime","startFrame"],3,4,4],["4b7cfRS5bdP8qo8rorNgln5",["node","__prefab"],3,1,4],["cc.Prefab",["_name"],2],["0ab97H51jJALJr6aO9gzNGg",["_name"],2],["cc.BoxCollider",["node","_size"],3,1,5],["f3d36qkNslPB4TIGcZlp8vd",["node","fightLoading","mapManager","customerManager","carManager","effectManager","nodeGround"],3,1,1,1,1,1,1,1],["daea1EBoy1Ms6PBdAupQWnn",["node","carManager","tip"],3,1,1,1],["ff8ee6OQldPNLrgLpXROotm",["_name","isFollowRotation","node","offset"],1,1,5],["273adkVLRhECoDje+nCdBuE",[],3],["586a8tdaBhPQprl2rcvzztA",["_name"],2],["cf371ivOc1Ae64t3ScAzqjv",["carManager"],3,1],["cc.Material",["_techIdx","_states","_defines","_props"],0,12],["ForwardPipeline",["_flows"],3,9],["ShadowFlow",["_name","_stages"],2,9],["ShadowStage",["_name"],2],["ForwardFlow",["_name","_priority","_stages"],1,9],["ForwardStage",["_name","renderQueues"],2,9]],[[8,1],[27,0,2],[8,0,2],[3,1,3,2,1],[14,1],[0,0,1,4,3,6,3],[1,0,1,4,3,5,3],[3,0,1,3,2,2],[0,0,1,4,5,3,6,3],[0,0,2,4,3,3],[4,0,2,3,4,3],[3,0,1,2,2],[5,1,0,3,4,5,3],[5,0,2,3,4,5,3],[5,0,3,4,5,2],[6,0,1,6,7,3],[41,0,1],[42,0,1,2,3,1],[43,0,1,2,3,1],[44,0,1,2,1],[45,0,1,2,3,1],[46,0,1,2,1],[47,0,1,1],[9,0,1,2,2],[24,0,2],[0,0,1,4,5,3,3],[0,0,1,4,3,3],[1,0,1,4,3,5,7,8,3],[4,0,3,4,6,5,2],[3,1,3,1],[25,0,1,2,2],[2,0,9,2],[28,0,1,1],[29,0,1,2,3,4,5,3],[30,0,1,2,3,2],[9,0,2],[31,0,1,2,3,4,1],[32,1],[33,0,1],[34,1],[35,0,1,1],[6,0,1,2,6,7,4],[38,1],[7,3,4,5,2,6,0,8,9,7],[39,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,4],[40,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,2],[14,0,1,2,2],[8,1,2,3,4],[15,0,1,2],[15,1,1],[16,2,0,1,4,4],[16,3,0,1,4,4],[17,3,4,5,6,7,1],[17,0,1,2,3,4,5,6,7,4],[18,1,1],[18,0,2],[48,0,1,1],[23,0,1,2,4],[0,0,1,2,5,3,6,4],[0,0,5,7,2],[0,0,2,4,3,8,3],[0,0,2,4,3,6,9,10,3],[1,0,1,4,6,3,5,3],[1,0,1,2,6,3,5,4],[1,0,1,4,6,3,3],[1,0,2,4,3,5,7,8,3],[4,0,3,4,5,2],[4,0,1,3,4,5,3],[3,1,2,1],[26,0,1,2,3,2],[2,0,3,4,1,9,11,10,5],[2,2,0,6,5,1,9,10,6],[2,2,0,3,4,1,9,11,10,6],[2,0,5,9,3],[2,2,0,7,8,1,9,10,6],[5,1,2,3,4,3],[10,0,2,3,2],[10,1,0,2,4,3,5,3],[11,0,1,2,3,4,6],[11,5,0,1,2,3,4,7],[12,2,0,1,3,4,5,5],[12,0,1,4,5,3],[6,3,0,4,5,1,6,6],[6,0,1,2,6,4],[36,0,1],[37,0,1,2,3,3],[13,0,5,6,2],[13,1,2,3,4,0,5,7,6,6],[7,1,0,8,9,3],[7,7,1,2,0,8,9,5],[19,1,2,3,4,1],[19,0,1,2,3,4,2],[49,0,2],[50,0,2],[51,0,1,1],[52,0,1,2,3,4,5,6,1],[53,0,1,2,1],[54,0,1,2,3,3],[55,1],[56,0,2],[57,0,1],[58,0,1,2,3,4],[59,0,1],[60,0,1,2],[61,0,2],[62,0,1,2,3],[63,0,1,2],[20,0,2],[20,1,2,0,4]],[[[[57,"builtin-particle-trail",[{"hash":1437790364,"name":"builtin-particle-trail|particle-trail:vs_main|tinted-fs:add","blocks":[{"name":"Constants","stageFlags":1,"binding":0,"members":[{"name":"mainTiling_Offset","type":16,"count":1},{"name":"frameTile_velLenScale","type":16,"count":1},{"name":"scale","type":16,"count":1},{"name":"nodeRotation","type":16,"count":1}],"defines":[]},{"name":"FragConstants","stageFlags":16,"binding":1,"members":[{"name":"tintColor","type":16,"count":1}],"defines":[]}],"samplerTextures":[{"name":"mainTexture","type":28,"count":1,"stageFlags":16,"binding":2,"defines":[]}],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[],"attributes":[{"name":"a_position","format":32,"location":0,"defines":[]},{"name":"a_texCoord","format":44,"location":1,"defines":[]},{"name":"a_texCoord1","format":32,"location":2,"defines":[]},{"name":"a_texCoord2","format":32,"location":3,"defines":[]},{"name":"a_color","format":44,"location":4,"defines":[]}],"varyings":[{"name":"uv","type":14,"count":1,"stageFlags":17,"location":0,"defines":[]},{"name":"color","type":16,"count":1,"stageFlags":17,"location":1,"defines":[]},{"name":"vBarycentric","type":15,"count":1,"stageFlags":17,"location":2,"defines":["CC_DRAW_WIRE_FRAME"]}],"fragColors":[{"name":"cc_FragColor","typename":"vec4","type":16,"count":1,"stageFlags":16,"location":0,"defines":[]}],"glsl4":{"vert":"\nprecision mediump float;\nlayout(set = 1, binding = 0) uniform Constants {\n  vec4 mainTiling_Offset;\n  vec4 frameTile_velLenScale;\n  vec4 scale;\n  vec4 nodeRotation;\n};\nlayout(set = 0, binding = 0) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\nlayout(set = 2, binding = 0) uniform CCLocal {\n  highp mat4 cc_matWorld;\n  highp mat4 cc_matWorldIT;\n  highp vec4 cc_lightingMapUVParam;\n};\nlayout(location = 0) out mediump vec2 uv;\nlayout(location = 1) out mediump vec4 color;\nlayout(location = 0) in vec3 a_position;\nlayout(location = 1) in vec4 a_texCoord;\nlayout(location = 2) in vec3 a_texCoord1;\nlayout(location = 3) in vec3 a_texCoord2;\nlayout(location = 4) in vec4 a_color;\n#if CC_DRAW_WIRE_FRAME\n  layout(location = 2) out vec3 vBarycentric;\n#endif\nvec4 vs_main() {\n  highp vec4 pos = vec4(a_position, 1);\n  vec4 velocity = vec4(a_texCoord1.xyz, 0);\n  #if !CC_USE_WORLD_SPACE\n    pos = cc_matWorld * pos;\n    velocity = cc_matWorld * velocity;\n  #endif\n  float vertOffset = (a_texCoord.x - 0.5) * a_texCoord.y;\n  vec3 camUp = normalize(cross(pos.xyz - cc_cameraPos.xyz, velocity.xyz));\n  pos.xyz += camUp * vertOffset;\n  pos = cc_matViewProj * pos;\n  uv = a_texCoord.zw * mainTiling_Offset.xy + mainTiling_Offset.zw;;\n  color = a_color;\n  #if CC_DRAW_WIRE_FRAME\n    vBarycentric = a_texCoord2;\n  #endif\n  return pos;\n}\nvoid main() { gl_Position = vs_main(); }","frag":"\n  precision mediump float;\n  layout(set = 0, binding = 0) uniform CCGlobal {\n    highp   vec4 cc_time;\n    mediump vec4 cc_screenSize;\n    mediump vec4 cc_nativeSize;\n  };\n  layout(set = 0, binding = 1) uniform CCCamera {\n    highp   mat4 cc_matView;\n    highp   mat4 cc_matViewInv;\n    highp   mat4 cc_matProj;\n    highp   mat4 cc_matProjInv;\n    highp   mat4 cc_matViewProj;\n    highp   mat4 cc_matViewProjInv;\n    highp   vec4 cc_cameraPos;\n    mediump vec4 cc_screenScale;\n    mediump vec4 cc_exposure;\n    mediump vec4 cc_mainLitDir;\n    mediump vec4 cc_mainLitColor;\n    mediump vec4 cc_ambientSky;\n    mediump vec4 cc_ambientGround;\n    mediump vec4 cc_fogColor;\n    mediump vec4 cc_fogBase;\n    mediump vec4 cc_fogAdd;\n    mediump vec4 cc_nearFar;\n    mediump vec4 cc_viewPort;\n  };\n  vec4 CCFragOutput (vec4 color) {\n    return color;\n  }\n  layout(location = 0) in vec2 uv;\n  layout(location = 1) in vec4 color;\n  #if CC_DRAW_WIRE_FRAME\n    layout(location = 2) in vec3 vBarycentric;\n  #endif\n  layout(set = 1, binding = 2) uniform sampler2D mainTexture;\n  layout(set = 1, binding = 1) uniform FragConstants {\n    vec4 tintColor;\n  };\n  vec4 add () {\n    vec4 col = 2.0 * color * tintColor * texture(mainTexture, uv);\n#if CC_DRAW_WIRE_FRAME\n    if (any(lessThan(vBarycentric, vec3(0.02)))) {\n        col = vec4(0., 1., 1., 1.);\n    }\n#endif\n    return CCFragOutput(col);\n  }\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = add(); }"},"glsl3":{"vert":"\nprecision mediump float;\nlayout(std140) uniform Constants {\n  vec4 mainTiling_Offset;\n  vec4 frameTile_velLenScale;\n  vec4 scale;\n  vec4 nodeRotation;\n};\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\nlayout(std140) uniform CCLocal {\n  highp mat4 cc_matWorld;\n  highp mat4 cc_matWorldIT;\n  highp vec4 cc_lightingMapUVParam;\n};\nout mediump vec2 uv;\nout mediump vec4 color;\nin vec3 a_position;\nin vec4 a_texCoord;\nin vec3 a_texCoord1;\nin vec3 a_texCoord2;\nin vec4 a_color;\n#if CC_DRAW_WIRE_FRAME\n  out vec3 vBarycentric;\n#endif\nvec4 vs_main() {\n  highp vec4 pos = vec4(a_position, 1);\n  vec4 velocity = vec4(a_texCoord1.xyz, 0);\n  #if !CC_USE_WORLD_SPACE\n    pos = cc_matWorld * pos;\n    velocity = cc_matWorld * velocity;\n  #endif\n  float vertOffset = (a_texCoord.x - 0.5) * a_texCoord.y;\n  vec3 camUp = normalize(cross(pos.xyz - cc_cameraPos.xyz, velocity.xyz));\n  pos.xyz += camUp * vertOffset;\n  pos = cc_matViewProj * pos;\n  uv = a_texCoord.zw * mainTiling_Offset.xy + mainTiling_Offset.zw;;\n  color = a_color;\n  #if CC_DRAW_WIRE_FRAME\n    vBarycentric = a_texCoord2;\n  #endif\n  return pos;\n}\nvoid main() { gl_Position = vs_main(); }","frag":"\n  precision mediump float;\n  layout(std140) uniform CCGlobal {\n    highp   vec4 cc_time;\n    mediump vec4 cc_screenSize;\n    mediump vec4 cc_nativeSize;\n  };\n  layout(std140) uniform CCCamera {\n    highp   mat4 cc_matView;\n    highp   mat4 cc_matViewInv;\n    highp   mat4 cc_matProj;\n    highp   mat4 cc_matProjInv;\n    highp   mat4 cc_matViewProj;\n    highp   mat4 cc_matViewProjInv;\n    highp   vec4 cc_cameraPos;\n    mediump vec4 cc_screenScale;\n    mediump vec4 cc_exposure;\n    mediump vec4 cc_mainLitDir;\n    mediump vec4 cc_mainLitColor;\n    mediump vec4 cc_ambientSky;\n    mediump vec4 cc_ambientGround;\n    mediump vec4 cc_fogColor;\n    mediump vec4 cc_fogBase;\n    mediump vec4 cc_fogAdd;\n    mediump vec4 cc_nearFar;\n    mediump vec4 cc_viewPort;\n  };\n  vec4 CCFragOutput (vec4 color) {\n    return color;\n  }\n  in vec2 uv;\n  in vec4 color;\n  #if CC_DRAW_WIRE_FRAME\n    in vec3 vBarycentric;\n  #endif\n  uniform sampler2D mainTexture;\n  layout(std140) uniform FragConstants {\n    vec4 tintColor;\n  };\n  vec4 add () {\n    vec4 col = 2.0 * color * tintColor * texture(mainTexture, uv);\n#if CC_DRAW_WIRE_FRAME\n    if (any(lessThan(vBarycentric, vec3(0.02)))) {\n        col = vec4(0., 1., 1., 1.);\n    }\n#endif\n    return CCFragOutput(col);\n  }\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = add(); }"},"glsl1":{"vert":"\nprecision mediump float;\n   uniform vec4 mainTiling_Offset;\nuniform highp mat4 cc_matViewProj;\n  uniform highp vec4 cc_cameraPos;\nuniform highp mat4 cc_matWorld;\nvarying mediump vec2 uv;\nvarying mediump vec4 color;\nattribute vec3 a_position;\nattribute vec4 a_texCoord;\nattribute vec3 a_texCoord1;\nattribute vec3 a_texCoord2;\nattribute vec4 a_color;\n#if CC_DRAW_WIRE_FRAME\n  varying vec3 vBarycentric;\n#endif\nvec4 vs_main() {\n  highp vec4 pos = vec4(a_position, 1);\n  vec4 velocity = vec4(a_texCoord1.xyz, 0);\n  #if !CC_USE_WORLD_SPACE\n    pos = cc_matWorld * pos;\n    velocity = cc_matWorld * velocity;\n  #endif\n  float vertOffset = (a_texCoord.x - 0.5) * a_texCoord.y;\n  vec3 camUp = normalize(cross(pos.xyz - cc_cameraPos.xyz, velocity.xyz));\n  pos.xyz += camUp * vertOffset;\n  pos = cc_matViewProj * pos;\n  uv = a_texCoord.zw * mainTiling_Offset.xy + mainTiling_Offset.zw;;\n  color = a_color;\n  #if CC_DRAW_WIRE_FRAME\n    vBarycentric = a_texCoord2;\n  #endif\n  return pos;\n}\nvoid main() { gl_Position = vs_main(); }","frag":"\n  precision mediump float;\n  vec4 CCFragOutput (vec4 color) {\n    return color;\n  }\n  varying vec2 uv;\n  varying vec4 color;\n  #if CC_DRAW_WIRE_FRAME\n    varying vec3 vBarycentric;\n  #endif\n  uniform sampler2D mainTexture;\n      uniform vec4 tintColor;\n  vec4 add () {\n    vec4 col = 2.0 * color * tintColor * texture2D(mainTexture, uv);\n#if CC_DRAW_WIRE_FRAME\n    if (any(lessThan(vBarycentric, vec3(0.02)))) {\n        col = vec4(0., 1., 1., 1.);\n    }\n#endif\n    return CCFragOutput(col);\n  }\nvoid main() { gl_FragColor = add(); }"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]},{"name":"CCCamera","defines":[]}],"samplerTextures":[],"buffers":[],"images":[]},"locals":{"blocks":[{"name":"CCLocal","defines":[]}],"samplerTextures":[],"buffers":[],"images":[]},"statistics":{"CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS":52,"CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS":40}},"defines":[{"name":"CC_RENDER_MODE","type":"number","defines":[],"range":[0,4]},{"name":"CC_DRAW_WIRE_FRAME","type":"boolean","defines":[]},{"name":"CC_USE_WORLD_SPACE","type":"boolean","defines":[]}]},{"hash":1577621763,"name":"builtin-particle-trail|particle-trail:vs_main|tinted-fs:multiply","blocks":[{"name":"Constants","stageFlags":1,"binding":0,"members":[{"name":"mainTiling_Offset","type":16,"count":1},{"name":"frameTile_velLenScale","type":16,"count":1},{"name":"scale","type":16,"count":1},{"name":"nodeRotation","type":16,"count":1}],"defines":[]},{"name":"FragConstants","stageFlags":16,"binding":1,"members":[{"name":"tintColor","type":16,"count":1}],"defines":[]}],"samplerTextures":[{"name":"mainTexture","type":28,"count":1,"stageFlags":16,"binding":2,"defines":[]}],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[],"attributes":[{"name":"a_position","format":32,"location":0,"defines":[]},{"name":"a_texCoord","format":44,"location":1,"defines":[]},{"name":"a_texCoord1","format":32,"location":2,"defines":[]},{"name":"a_texCoord2","format":32,"location":3,"defines":[]},{"name":"a_color","format":44,"location":4,"defines":[]}],"varyings":[{"name":"uv","type":14,"count":1,"stageFlags":17,"location":0,"defines":[]},{"name":"color","type":16,"count":1,"stageFlags":17,"location":1,"defines":[]},{"name":"vBarycentric","type":15,"count":1,"stageFlags":17,"location":2,"defines":["CC_DRAW_WIRE_FRAME"]}],"fragColors":[{"name":"cc_FragColor","typename":"vec4","type":16,"count":1,"stageFlags":16,"location":0,"defines":[]}],"glsl4":{"vert":"\nprecision mediump float;\nlayout(set = 1, binding = 0) uniform Constants {\n  vec4 mainTiling_Offset;\n  vec4 frameTile_velLenScale;\n  vec4 scale;\n  vec4 nodeRotation;\n};\nlayout(set = 0, binding = 0) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\nlayout(set = 2, binding = 0) uniform CCLocal {\n  highp mat4 cc_matWorld;\n  highp mat4 cc_matWorldIT;\n  highp vec4 cc_lightingMapUVParam;\n};\nlayout(location = 0) out mediump vec2 uv;\nlayout(location = 1) out mediump vec4 color;\nlayout(location = 0) in vec3 a_position;\nlayout(location = 1) in vec4 a_texCoord;\nlayout(location = 2) in vec3 a_texCoord1;\nlayout(location = 3) in vec3 a_texCoord2;\nlayout(location = 4) in vec4 a_color;\n#if CC_DRAW_WIRE_FRAME\n  layout(location = 2) out vec3 vBarycentric;\n#endif\nvec4 vs_main() {\n  highp vec4 pos = vec4(a_position, 1);\n  vec4 velocity = vec4(a_texCoord1.xyz, 0);\n  #if !CC_USE_WORLD_SPACE\n    pos = cc_matWorld * pos;\n    velocity = cc_matWorld * velocity;\n  #endif\n  float vertOffset = (a_texCoord.x - 0.5) * a_texCoord.y;\n  vec3 camUp = normalize(cross(pos.xyz - cc_cameraPos.xyz, velocity.xyz));\n  pos.xyz += camUp * vertOffset;\n  pos = cc_matViewProj * pos;\n  uv = a_texCoord.zw * mainTiling_Offset.xy + mainTiling_Offset.zw;;\n  color = a_color;\n  #if CC_DRAW_WIRE_FRAME\n    vBarycentric = a_texCoord2;\n  #endif\n  return pos;\n}\nvoid main() { gl_Position = vs_main(); }","frag":"\n  precision mediump float;\n  layout(set = 0, binding = 0) uniform CCGlobal {\n    highp   vec4 cc_time;\n    mediump vec4 cc_screenSize;\n    mediump vec4 cc_nativeSize;\n  };\n  layout(set = 0, binding = 1) uniform CCCamera {\n    highp   mat4 cc_matView;\n    highp   mat4 cc_matViewInv;\n    highp   mat4 cc_matProj;\n    highp   mat4 cc_matProjInv;\n    highp   mat4 cc_matViewProj;\n    highp   mat4 cc_matViewProjInv;\n    highp   vec4 cc_cameraPos;\n    mediump vec4 cc_screenScale;\n    mediump vec4 cc_exposure;\n    mediump vec4 cc_mainLitDir;\n    mediump vec4 cc_mainLitColor;\n    mediump vec4 cc_ambientSky;\n    mediump vec4 cc_ambientGround;\n    mediump vec4 cc_fogColor;\n    mediump vec4 cc_fogBase;\n    mediump vec4 cc_fogAdd;\n    mediump vec4 cc_nearFar;\n    mediump vec4 cc_viewPort;\n  };\n  vec4 CCFragOutput (vec4 color) {\n    return color;\n  }\n  layout(location = 0) in vec2 uv;\n  layout(location = 1) in vec4 color;\n  #if CC_DRAW_WIRE_FRAME\n    layout(location = 2) in vec3 vBarycentric;\n  #endif\n  layout(set = 1, binding = 2) uniform sampler2D mainTexture;\n  layout(set = 1, binding = 1) uniform FragConstants {\n    vec4 tintColor;\n  };\n  vec4 multiply () {\n    vec4 col;\n    vec4 texColor = texture(mainTexture, uv);\n    col.rgb = tintColor.rgb * texColor.rgb * color.rgb * vec3(2.0);\n    col.a = (1.0 - texColor.a) * (tintColor.a * color.a * 2.0);\n#if CC_DRAW_WIRE_FRAME\n    if (any(lessThan(vBarycentric, vec3(0.02)))) {\n        col = vec4(0., 1., 1., col.a);\n    }\n#endif\n    return CCFragOutput(col);\n  }\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = multiply(); }"},"glsl3":{"vert":"\nprecision mediump float;\nlayout(std140) uniform Constants {\n  vec4 mainTiling_Offset;\n  vec4 frameTile_velLenScale;\n  vec4 scale;\n  vec4 nodeRotation;\n};\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\nlayout(std140) uniform CCLocal {\n  highp mat4 cc_matWorld;\n  highp mat4 cc_matWorldIT;\n  highp vec4 cc_lightingMapUVParam;\n};\nout mediump vec2 uv;\nout mediump vec4 color;\nin vec3 a_position;\nin vec4 a_texCoord;\nin vec3 a_texCoord1;\nin vec3 a_texCoord2;\nin vec4 a_color;\n#if CC_DRAW_WIRE_FRAME\n  out vec3 vBarycentric;\n#endif\nvec4 vs_main() {\n  highp vec4 pos = vec4(a_position, 1);\n  vec4 velocity = vec4(a_texCoord1.xyz, 0);\n  #if !CC_USE_WORLD_SPACE\n    pos = cc_matWorld * pos;\n    velocity = cc_matWorld * velocity;\n  #endif\n  float vertOffset = (a_texCoord.x - 0.5) * a_texCoord.y;\n  vec3 camUp = normalize(cross(pos.xyz - cc_cameraPos.xyz, velocity.xyz));\n  pos.xyz += camUp * vertOffset;\n  pos = cc_matViewProj * pos;\n  uv = a_texCoord.zw * mainTiling_Offset.xy + mainTiling_Offset.zw;;\n  color = a_color;\n  #if CC_DRAW_WIRE_FRAME\n    vBarycentric = a_texCoord2;\n  #endif\n  return pos;\n}\nvoid main() { gl_Position = vs_main(); }","frag":"\n  precision mediump float;\n  layout(std140) uniform CCGlobal {\n    highp   vec4 cc_time;\n    mediump vec4 cc_screenSize;\n    mediump vec4 cc_nativeSize;\n  };\n  layout(std140) uniform CCCamera {\n    highp   mat4 cc_matView;\n    highp   mat4 cc_matViewInv;\n    highp   mat4 cc_matProj;\n    highp   mat4 cc_matProjInv;\n    highp   mat4 cc_matViewProj;\n    highp   mat4 cc_matViewProjInv;\n    highp   vec4 cc_cameraPos;\n    mediump vec4 cc_screenScale;\n    mediump vec4 cc_exposure;\n    mediump vec4 cc_mainLitDir;\n    mediump vec4 cc_mainLitColor;\n    mediump vec4 cc_ambientSky;\n    mediump vec4 cc_ambientGround;\n    mediump vec4 cc_fogColor;\n    mediump vec4 cc_fogBase;\n    mediump vec4 cc_fogAdd;\n    mediump vec4 cc_nearFar;\n    mediump vec4 cc_viewPort;\n  };\n  vec4 CCFragOutput (vec4 color) {\n    return color;\n  }\n  in vec2 uv;\n  in vec4 color;\n  #if CC_DRAW_WIRE_FRAME\n    in vec3 vBarycentric;\n  #endif\n  uniform sampler2D mainTexture;\n  layout(std140) uniform FragConstants {\n    vec4 tintColor;\n  };\n  vec4 multiply () {\n    vec4 col;\n    vec4 texColor = texture(mainTexture, uv);\n    col.rgb = tintColor.rgb * texColor.rgb * color.rgb * vec3(2.0);\n    col.a = (1.0 - texColor.a) * (tintColor.a * color.a * 2.0);\n#if CC_DRAW_WIRE_FRAME\n    if (any(lessThan(vBarycentric, vec3(0.02)))) {\n        col = vec4(0., 1., 1., col.a);\n    }\n#endif\n    return CCFragOutput(col);\n  }\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = multiply(); }"},"glsl1":{"vert":"\nprecision mediump float;\n   uniform vec4 mainTiling_Offset;\nuniform highp mat4 cc_matViewProj;\n  uniform highp vec4 cc_cameraPos;\nuniform highp mat4 cc_matWorld;\nvarying mediump vec2 uv;\nvarying mediump vec4 color;\nattribute vec3 a_position;\nattribute vec4 a_texCoord;\nattribute vec3 a_texCoord1;\nattribute vec3 a_texCoord2;\nattribute vec4 a_color;\n#if CC_DRAW_WIRE_FRAME\n  varying vec3 vBarycentric;\n#endif\nvec4 vs_main() {\n  highp vec4 pos = vec4(a_position, 1);\n  vec4 velocity = vec4(a_texCoord1.xyz, 0);\n  #if !CC_USE_WORLD_SPACE\n    pos = cc_matWorld * pos;\n    velocity = cc_matWorld * velocity;\n  #endif\n  float vertOffset = (a_texCoord.x - 0.5) * a_texCoord.y;\n  vec3 camUp = normalize(cross(pos.xyz - cc_cameraPos.xyz, velocity.xyz));\n  pos.xyz += camUp * vertOffset;\n  pos = cc_matViewProj * pos;\n  uv = a_texCoord.zw * mainTiling_Offset.xy + mainTiling_Offset.zw;;\n  color = a_color;\n  #if CC_DRAW_WIRE_FRAME\n    vBarycentric = a_texCoord2;\n  #endif\n  return pos;\n}\nvoid main() { gl_Position = vs_main(); }","frag":"\n  precision mediump float;\n  vec4 CCFragOutput (vec4 color) {\n    return color;\n  }\n  varying vec2 uv;\n  varying vec4 color;\n  #if CC_DRAW_WIRE_FRAME\n    varying vec3 vBarycentric;\n  #endif\n  uniform sampler2D mainTexture;\n      uniform vec4 tintColor;\n  vec4 multiply () {\n    vec4 col;\n    vec4 texColor = texture2D(mainTexture, uv);\n    col.rgb = tintColor.rgb * texColor.rgb * color.rgb * vec3(2.0);\n    col.a = (1.0 - texColor.a) * (tintColor.a * color.a * 2.0);\n#if CC_DRAW_WIRE_FRAME\n    if (any(lessThan(vBarycentric, vec3(0.02)))) {\n        col = vec4(0., 1., 1., col.a);\n    }\n#endif\n    return CCFragOutput(col);\n  }\nvoid main() { gl_FragColor = multiply(); }"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]},{"name":"CCCamera","defines":[]}],"samplerTextures":[],"buffers":[],"images":[]},"locals":{"blocks":[{"name":"CCLocal","defines":[]}],"samplerTextures":[],"buffers":[],"images":[]},"statistics":{"CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS":52,"CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS":40}},"defines":[{"name":"CC_RENDER_MODE","type":"number","defines":[],"range":[0,4]},{"name":"CC_DRAW_WIRE_FRAME","type":"boolean","defines":[]},{"name":"CC_USE_WORLD_SPACE","type":"boolean","defines":[]}]},{"hash":1428325067,"name":"builtin-particle-trail|particle-trail:vs_main|no-tint-fs:addSmooth","blocks":[{"name":"Constants","stageFlags":1,"binding":0,"members":[{"name":"mainTiling_Offset","type":16,"count":1},{"name":"frameTile_velLenScale","type":16,"count":1},{"name":"scale","type":16,"count":1},{"name":"nodeRotation","type":16,"count":1}],"defines":[]}],"samplerTextures":[{"name":"mainTexture","type":28,"count":1,"stageFlags":16,"binding":1,"defines":[]}],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[],"attributes":[{"name":"a_position","format":32,"location":0,"defines":[]},{"name":"a_texCoord","format":44,"location":1,"defines":[]},{"name":"a_texCoord1","format":32,"location":2,"defines":[]},{"name":"a_texCoord2","format":32,"location":3,"defines":[]},{"name":"a_color","format":44,"location":4,"defines":[]}],"varyings":[{"name":"uv","type":14,"count":1,"stageFlags":17,"location":0,"defines":[]},{"name":"color","type":16,"count":1,"stageFlags":17,"location":1,"defines":[]},{"name":"vBarycentric","type":15,"count":1,"stageFlags":1,"location":2,"defines":["CC_DRAW_WIRE_FRAME"]}],"fragColors":[{"name":"cc_FragColor","typename":"vec4","type":16,"count":1,"stageFlags":16,"location":0,"defines":[]}],"glsl4":{"vert":"\nprecision mediump float;\nlayout(set = 1, binding = 0) uniform Constants {\n  vec4 mainTiling_Offset;\n  vec4 frameTile_velLenScale;\n  vec4 scale;\n  vec4 nodeRotation;\n};\nlayout(set = 0, binding = 0) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\nlayout(set = 2, binding = 0) uniform CCLocal {\n  highp mat4 cc_matWorld;\n  highp mat4 cc_matWorldIT;\n  highp vec4 cc_lightingMapUVParam;\n};\nlayout(location = 0) out mediump vec2 uv;\nlayout(location = 1) out mediump vec4 color;\nlayout(location = 0) in vec3 a_position;\nlayout(location = 1) in vec4 a_texCoord;\nlayout(location = 2) in vec3 a_texCoord1;\nlayout(location = 3) in vec3 a_texCoord2;\nlayout(location = 4) in vec4 a_color;\n#if CC_DRAW_WIRE_FRAME\n  layout(location = 2) out vec3 vBarycentric;\n#endif\nvec4 vs_main() {\n  highp vec4 pos = vec4(a_position, 1);\n  vec4 velocity = vec4(a_texCoord1.xyz, 0);\n  #if !CC_USE_WORLD_SPACE\n    pos = cc_matWorld * pos;\n    velocity = cc_matWorld * velocity;\n  #endif\n  float vertOffset = (a_texCoord.x - 0.5) * a_texCoord.y;\n  vec3 camUp = normalize(cross(pos.xyz - cc_cameraPos.xyz, velocity.xyz));\n  pos.xyz += camUp * vertOffset;\n  pos = cc_matViewProj * pos;\n  uv = a_texCoord.zw * mainTiling_Offset.xy + mainTiling_Offset.zw;;\n  color = a_color;\n  #if CC_DRAW_WIRE_FRAME\n    vBarycentric = a_texCoord2;\n  #endif\n  return pos;\n}\nvoid main() { gl_Position = vs_main(); }","frag":"\nprecision mediump float;\nlayout(set = 0, binding = 0) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\nvec4 CCFragOutput (vec4 color) {\n  return color;\n}\nlayout(location = 0) in vec2 uv;\nlayout(location = 1) in vec4 color;\nlayout(set = 1, binding = 1) uniform sampler2D mainTexture;\nvec4 addSmooth () {\n  vec4 col = color * texture(mainTexture, uv);\n  col.rgb *= col.a;\n  return CCFragOutput(col);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = addSmooth(); }"},"glsl3":{"vert":"\nprecision mediump float;\nlayout(std140) uniform Constants {\n  vec4 mainTiling_Offset;\n  vec4 frameTile_velLenScale;\n  vec4 scale;\n  vec4 nodeRotation;\n};\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\nlayout(std140) uniform CCLocal {\n  highp mat4 cc_matWorld;\n  highp mat4 cc_matWorldIT;\n  highp vec4 cc_lightingMapUVParam;\n};\nout mediump vec2 uv;\nout mediump vec4 color;\nin vec3 a_position;\nin vec4 a_texCoord;\nin vec3 a_texCoord1;\nin vec3 a_texCoord2;\nin vec4 a_color;\n#if CC_DRAW_WIRE_FRAME\n  out vec3 vBarycentric;\n#endif\nvec4 vs_main() {\n  highp vec4 pos = vec4(a_position, 1);\n  vec4 velocity = vec4(a_texCoord1.xyz, 0);\n  #if !CC_USE_WORLD_SPACE\n    pos = cc_matWorld * pos;\n    velocity = cc_matWorld * velocity;\n  #endif\n  float vertOffset = (a_texCoord.x - 0.5) * a_texCoord.y;\n  vec3 camUp = normalize(cross(pos.xyz - cc_cameraPos.xyz, velocity.xyz));\n  pos.xyz += camUp * vertOffset;\n  pos = cc_matViewProj * pos;\n  uv = a_texCoord.zw * mainTiling_Offset.xy + mainTiling_Offset.zw;;\n  color = a_color;\n  #if CC_DRAW_WIRE_FRAME\n    vBarycentric = a_texCoord2;\n  #endif\n  return pos;\n}\nvoid main() { gl_Position = vs_main(); }","frag":"\nprecision mediump float;\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\nvec4 CCFragOutput (vec4 color) {\n  return color;\n}\nin vec2 uv;\nin vec4 color;\nuniform sampler2D mainTexture;\nvec4 addSmooth () {\n  vec4 col = color * texture(mainTexture, uv);\n  col.rgb *= col.a;\n  return CCFragOutput(col);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = addSmooth(); }"},"glsl1":{"vert":"\nprecision mediump float;\n   uniform vec4 mainTiling_Offset;\nuniform highp mat4 cc_matViewProj;\n  uniform highp vec4 cc_cameraPos;\nuniform highp mat4 cc_matWorld;\nvarying mediump vec2 uv;\nvarying mediump vec4 color;\nattribute vec3 a_position;\nattribute vec4 a_texCoord;\nattribute vec3 a_texCoord1;\nattribute vec3 a_texCoord2;\nattribute vec4 a_color;\n#if CC_DRAW_WIRE_FRAME\n  varying vec3 vBarycentric;\n#endif\nvec4 vs_main() {\n  highp vec4 pos = vec4(a_position, 1);\n  vec4 velocity = vec4(a_texCoord1.xyz, 0);\n  #if !CC_USE_WORLD_SPACE\n    pos = cc_matWorld * pos;\n    velocity = cc_matWorld * velocity;\n  #endif\n  float vertOffset = (a_texCoord.x - 0.5) * a_texCoord.y;\n  vec3 camUp = normalize(cross(pos.xyz - cc_cameraPos.xyz, velocity.xyz));\n  pos.xyz += camUp * vertOffset;\n  pos = cc_matViewProj * pos;\n  uv = a_texCoord.zw * mainTiling_Offset.xy + mainTiling_Offset.zw;;\n  color = a_color;\n  #if CC_DRAW_WIRE_FRAME\n    vBarycentric = a_texCoord2;\n  #endif\n  return pos;\n}\nvoid main() { gl_Position = vs_main(); }","frag":"\nprecision mediump float;\nvec4 CCFragOutput (vec4 color) {\n  return color;\n}\nvarying vec2 uv;\nvarying vec4 color;\nuniform sampler2D mainTexture;\nvec4 addSmooth () {\n  vec4 col = color * texture2D(mainTexture, uv);\n  col.rgb *= col.a;\n  return CCFragOutput(col);\n}\nvoid main() { gl_FragColor = addSmooth(); }"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]},{"name":"CCCamera","defines":[]}],"samplerTextures":[],"buffers":[],"images":[]},"locals":{"blocks":[{"name":"CCLocal","defines":[]}],"samplerTextures":[],"buffers":[],"images":[]},"statistics":{"CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS":52,"CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS":39}},"defines":[{"name":"CC_RENDER_MODE","type":"number","defines":[],"range":[0,4]},{"name":"CC_DRAW_WIRE_FRAME","type":"boolean","defines":[]},{"name":"CC_USE_WORLD_SPACE","type":"boolean","defines":[]}]},{"hash":1371359874,"name":"builtin-particle-trail|particle-trail:vs_main|no-tint-fs:premultiplied","blocks":[{"name":"Constants","stageFlags":1,"binding":0,"members":[{"name":"mainTiling_Offset","type":16,"count":1},{"name":"frameTile_velLenScale","type":16,"count":1},{"name":"scale","type":16,"count":1},{"name":"nodeRotation","type":16,"count":1}],"defines":[]}],"samplerTextures":[{"name":"mainTexture","type":28,"count":1,"stageFlags":16,"binding":1,"defines":[]}],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[],"attributes":[{"name":"a_position","format":32,"location":0,"defines":[]},{"name":"a_texCoord","format":44,"location":1,"defines":[]},{"name":"a_texCoord1","format":32,"location":2,"defines":[]},{"name":"a_texCoord2","format":32,"location":3,"defines":[]},{"name":"a_color","format":44,"location":4,"defines":[]}],"varyings":[{"name":"uv","type":14,"count":1,"stageFlags":17,"location":0,"defines":[]},{"name":"color","type":16,"count":1,"stageFlags":17,"location":1,"defines":[]},{"name":"vBarycentric","type":15,"count":1,"stageFlags":1,"location":2,"defines":["CC_DRAW_WIRE_FRAME"]}],"fragColors":[{"name":"cc_FragColor","typename":"vec4","type":16,"count":1,"stageFlags":16,"location":0,"defines":[]}],"glsl4":{"vert":"\nprecision mediump float;\nlayout(set = 1, binding = 0) uniform Constants {\n  vec4 mainTiling_Offset;\n  vec4 frameTile_velLenScale;\n  vec4 scale;\n  vec4 nodeRotation;\n};\nlayout(set = 0, binding = 0) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\nlayout(set = 2, binding = 0) uniform CCLocal {\n  highp mat4 cc_matWorld;\n  highp mat4 cc_matWorldIT;\n  highp vec4 cc_lightingMapUVParam;\n};\nlayout(location = 0) out mediump vec2 uv;\nlayout(location = 1) out mediump vec4 color;\nlayout(location = 0) in vec3 a_position;\nlayout(location = 1) in vec4 a_texCoord;\nlayout(location = 2) in vec3 a_texCoord1;\nlayout(location = 3) in vec3 a_texCoord2;\nlayout(location = 4) in vec4 a_color;\n#if CC_DRAW_WIRE_FRAME\n  layout(location = 2) out vec3 vBarycentric;\n#endif\nvec4 vs_main() {\n  highp vec4 pos = vec4(a_position, 1);\n  vec4 velocity = vec4(a_texCoord1.xyz, 0);\n  #if !CC_USE_WORLD_SPACE\n    pos = cc_matWorld * pos;\n    velocity = cc_matWorld * velocity;\n  #endif\n  float vertOffset = (a_texCoord.x - 0.5) * a_texCoord.y;\n  vec3 camUp = normalize(cross(pos.xyz - cc_cameraPos.xyz, velocity.xyz));\n  pos.xyz += camUp * vertOffset;\n  pos = cc_matViewProj * pos;\n  uv = a_texCoord.zw * mainTiling_Offset.xy + mainTiling_Offset.zw;;\n  color = a_color;\n  #if CC_DRAW_WIRE_FRAME\n    vBarycentric = a_texCoord2;\n  #endif\n  return pos;\n}\nvoid main() { gl_Position = vs_main(); }","frag":"\nprecision mediump float;\nlayout(set = 0, binding = 0) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\nvec4 CCFragOutput (vec4 color) {\n  return color;\n}\nlayout(location = 0) in vec2 uv;\nlayout(location = 1) in vec4 color;\nlayout(set = 1, binding = 1) uniform sampler2D mainTexture;\nvec4 premultiplied () {\n  vec4 col = color * texture(mainTexture, uv) * color.a;\n  return CCFragOutput(col);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = premultiplied(); }"},"glsl3":{"vert":"\nprecision mediump float;\nlayout(std140) uniform Constants {\n  vec4 mainTiling_Offset;\n  vec4 frameTile_velLenScale;\n  vec4 scale;\n  vec4 nodeRotation;\n};\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\nlayout(std140) uniform CCLocal {\n  highp mat4 cc_matWorld;\n  highp mat4 cc_matWorldIT;\n  highp vec4 cc_lightingMapUVParam;\n};\nout mediump vec2 uv;\nout mediump vec4 color;\nin vec3 a_position;\nin vec4 a_texCoord;\nin vec3 a_texCoord1;\nin vec3 a_texCoord2;\nin vec4 a_color;\n#if CC_DRAW_WIRE_FRAME\n  out vec3 vBarycentric;\n#endif\nvec4 vs_main() {\n  highp vec4 pos = vec4(a_position, 1);\n  vec4 velocity = vec4(a_texCoord1.xyz, 0);\n  #if !CC_USE_WORLD_SPACE\n    pos = cc_matWorld * pos;\n    velocity = cc_matWorld * velocity;\n  #endif\n  float vertOffset = (a_texCoord.x - 0.5) * a_texCoord.y;\n  vec3 camUp = normalize(cross(pos.xyz - cc_cameraPos.xyz, velocity.xyz));\n  pos.xyz += camUp * vertOffset;\n  pos = cc_matViewProj * pos;\n  uv = a_texCoord.zw * mainTiling_Offset.xy + mainTiling_Offset.zw;;\n  color = a_color;\n  #if CC_DRAW_WIRE_FRAME\n    vBarycentric = a_texCoord2;\n  #endif\n  return pos;\n}\nvoid main() { gl_Position = vs_main(); }","frag":"\nprecision mediump float;\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\nvec4 CCFragOutput (vec4 color) {\n  return color;\n}\nin vec2 uv;\nin vec4 color;\nuniform sampler2D mainTexture;\nvec4 premultiplied () {\n  vec4 col = color * texture(mainTexture, uv) * color.a;\n  return CCFragOutput(col);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = premultiplied(); }"},"glsl1":{"vert":"\nprecision mediump float;\n   uniform vec4 mainTiling_Offset;\nuniform highp mat4 cc_matViewProj;\n  uniform highp vec4 cc_cameraPos;\nuniform highp mat4 cc_matWorld;\nvarying mediump vec2 uv;\nvarying mediump vec4 color;\nattribute vec3 a_position;\nattribute vec4 a_texCoord;\nattribute vec3 a_texCoord1;\nattribute vec3 a_texCoord2;\nattribute vec4 a_color;\n#if CC_DRAW_WIRE_FRAME\n  varying vec3 vBarycentric;\n#endif\nvec4 vs_main() {\n  highp vec4 pos = vec4(a_position, 1);\n  vec4 velocity = vec4(a_texCoord1.xyz, 0);\n  #if !CC_USE_WORLD_SPACE\n    pos = cc_matWorld * pos;\n    velocity = cc_matWorld * velocity;\n  #endif\n  float vertOffset = (a_texCoord.x - 0.5) * a_texCoord.y;\n  vec3 camUp = normalize(cross(pos.xyz - cc_cameraPos.xyz, velocity.xyz));\n  pos.xyz += camUp * vertOffset;\n  pos = cc_matViewProj * pos;\n  uv = a_texCoord.zw * mainTiling_Offset.xy + mainTiling_Offset.zw;;\n  color = a_color;\n  #if CC_DRAW_WIRE_FRAME\n    vBarycentric = a_texCoord2;\n  #endif\n  return pos;\n}\nvoid main() { gl_Position = vs_main(); }","frag":"\nprecision mediump float;\nvec4 CCFragOutput (vec4 color) {\n  return color;\n}\nvarying vec2 uv;\nvarying vec4 color;\nuniform sampler2D mainTexture;\nvec4 premultiplied () {\n  vec4 col = color * texture2D(mainTexture, uv) * color.a;\n  return CCFragOutput(col);\n}\nvoid main() { gl_FragColor = premultiplied(); }"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]},{"name":"CCCamera","defines":[]}],"samplerTextures":[],"buffers":[],"images":[]},"locals":{"blocks":[{"name":"CCLocal","defines":[]}],"samplerTextures":[],"buffers":[],"images":[]},"statistics":{"CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS":52,"CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS":39}},"defines":[{"name":"CC_RENDER_MODE","type":"number","defines":[],"range":[0,4]},{"name":"CC_DRAW_WIRE_FRAME","type":"boolean","defines":[]},{"name":"CC_USE_WORLD_SPACE","type":"boolean","defines":[]}]}],[{"name":"add","passes":[{"program":"builtin-particle-trail|particle-trail:vs_main|tinted-fs:add","rasterizerState":{"cullMode":0},"blendState":{"targets":[{"blend":true,"blendSrc":2,"blendDst":1,"blendSrcAlpha":2,"blendDstAlpha":1}]},"depthStencilState":{"depthTest":true,"depthWrite":false},"properties":{"mainTexture":{"value":"grey","type":28},"mainTiling_Offset":{"type":16,"value":[1,1,0,0]},"frameTile_velLenScale":{"type":16,"value":[1,1,0,0]},"tintColor":{"type":16,"value":[0.5,0.5,0.5,0.5],"editor":{"type":"color"}}}}]},{"name":"alpha-blend","passes":[{"program":"builtin-particle-trail|particle-trail:vs_main|tinted-fs:add","rasterizerState":{"cullMode":0},"blendState":{"targets":[{"blend":true,"blendSrc":1,"blendDst":4,"blendSrcAlpha":1,"blendDstAlpha":4}]},"depthStencilState":{"depthTest":true,"depthWrite":false},"properties":{"mainTexture":{"value":"grey","type":28},"mainTiling_Offset":{"type":16,"value":[1,1,0,0]},"frameTile_velLenScale":{"type":16,"value":[1,1,0,0]},"tintColor":{"type":16,"value":[0.5,0.5,0.5,0.5],"editor":{"type":"color"}}}}]},{"name":"add-multiply","passes":[{"program":"builtin-particle-trail|particle-trail:vs_main|tinted-fs:multiply","rasterizerState":{"cullMode":0},"blendState":{"targets":[{"blend":true,"blendSrc":1,"blendDst":4,"blendSrcAlpha":1,"blendDstAlpha":4}]},"depthStencilState":{"depthTest":true,"depthWrite":false},"properties":{"mainTexture":{"value":"grey","type":28},"mainTiling_Offset":{"type":16,"value":[1,1,0,0]},"frameTile_velLenScale":{"type":16,"value":[1,1,0,0]},"tintColor":{"type":16,"value":[0.5,0.5,0.5,0.5],"editor":{"type":"color"}}}}]},{"name":"add-smooth","passes":[{"program":"builtin-particle-trail|particle-trail:vs_main|no-tint-fs:addSmooth","rasterizerState":{"cullMode":0},"blendState":{"targets":[{"blend":true,"blendSrc":1,"blendDst":4,"blendSrcAlpha":1,"blendDstAlpha":4}]},"depthStencilState":{"depthTest":true,"depthWrite":false},"properties":{"mainTexture":{"value":"grey","type":28},"mainTiling_Offset":{"type":16,"value":[1,1,0,0]},"frameTile_velLenScale":{"type":16,"value":[1,1,0,0]}}}]},{"name":"premultiply-blend","passes":[{"program":"builtin-particle-trail|particle-trail:vs_main|no-tint-fs:premultiplied","rasterizerState":{"cullMode":0},"blendState":{"targets":[{"blend":true,"blendSrc":1,"blendDst":4,"blendSrcAlpha":1,"blendDstAlpha":4}]},"depthStencilState":{"depthTest":true,"depthWrite":false},"properties":{"mainTexture":{"value":"grey","type":28},"mainTiling_Offset":{"type":16,"value":[1,1,0,0]},"frameTile_velLenScale":{"type":16,"value":[1,1,0,0]}}}]}]]],0,0,[],[],[]],[[[24,"login"],[58,"Canvas",33554432,"e0tg9Z/DpOm5z+QDRcQfTJ",[-8,-9,-10],[[11,"Canvas<UITransform>",-1,[5,720,1280]],[30,"Canvas<Canvas>",-3,-2],[69,"Canvas<main>",-6,-5,-4],[31,45,-7]],[1,360,640,0]],[62,"loading",33554432,1,[-15,-16,-17,-18],[[[3,-11,[1,"95jeuL8mRBn7oFPPVkBklc"],[5,720,1280]],[70,45,100,100,1,-12,[1,"cfqzY1ZjlN66CiGQaRN1LK"],1],-13,[32,-14,11]],4,4,1,4],[1,0,0,1]],[25,"loadingCar03",33554432,2,[-22,-23,-24],[[7,"loadingCar03<UITransform>",-19,[1,"2aB/qtyy5OFIH+kk8JgUAC"],[5,144,26]],[12,"loadingCar03<Sprite>",0,-20,[1,"94a10N6uBAUY0ODd7hVFKg"],8],[33,"loadingCar03<Animation>",true,-21,[1,"7dwnnV8ztCtJMGqzJgn6np"],[9],10]]],[34,"login",[-25,-26,-27,1],[35,"21472705-eeda-4479-960c-68bca1b49253"],[36,[76,0.78125,[2,0.2,0.5019607843137255,0.8,0.520833125],[2,0.2,0.5019607843137255,0.8,0.520833125]],[78,0.1,1,30,31.51190251317746,0.2980392156862745],[37],[38,[4,4292993505]],[39]]],[8,"loadingCar01",33554432,3,[-30,-31],[[7,"loadingCar01<UITransform>",-28,[1,"8dQgZ/5tJF660AHCwjgADJ"],[5,195,95]],[12,"loadingCar01<Sprite>",0,-29,[1,"b07i1ZPPRCuYMM1QrNQrwy"],7]],[1,0,31.452999999999975,0]],[8,"progress",33554432,2,[-34,-35],[[3,-32,[1,"e7VWzqYE5NPoB8i9NKjbv4"],[5,67.82,40]],[80,false,1,1,10,-33,[1,"b0tuq9HzJMz5AJG8XBaj7k"]]],[1,0,-130,0]],[27,"car",33554432,3,[[-36,[40,-37,[1,"076vKfmCRO1osLp9b3g2Zj"]],[29,-38,[1,"43Sfn2JddHu4PzdrTldjsG"]]],1,4,4],[1,97.689,-2.848,0],[3,0,-0.7071067811865475,0,0.7071067811865476],[1,0,-90,0]],[6,"progress",33554432,6,[[[3,-39,[1,"f85ZYQ2BNBrKPRuC3NSbRv"],[5,22.25,50.4]],-40,[15,"0",40,-41,[1,"7fEHyWsyFKaospgoEC0TWc"]]],4,1,4],[1,-22.784999999999997,0,0]],[6,"version",33554432,1,[[[11,"version<UITransform>",-42,[5,233.5,50.4]],-43,[71,"version<Widget>",36,20,20,1,-44,1]],4,1,4],[1,223.25,-594.8,0]],[9,"GameRoot","150dCO5u9BoYrAdHzJPJdF",4,[[84,-45],[85,true,false,-46,0]]],[26,"bg",33554432,2,[[3,-47,[1,"7du8LjxEJHn4KIUxui9Zdx"],[5,720,1600]],[13,2,false,-48,[1,"cb4Tc2uElJ3KDrou+dyKKX"],1]]],[5,"shadow",33554432,3,[[3,-49,[1,"e7Y9GsJAJB+6bV/J7hXk2a"],[5,278,92]],[13,2,false,-50,[1,"5dm+JRVMNIvIPnosIdfs6e"],2]],[1,0,-16.76,0]],[5,"loadingCar02",33554432,5,[[3,-51,[1,"6dDFKweS1CbbUGZqPF+Egn"],[5,32,32]],[14,0,-52,[1,"41hA4nyDBFm7u8SVWdnXOq"],5]],[1,-49.023,-40.548,0]],[5,"loadingCar03",33554432,5,[[3,-53,[1,"92X152TJRFj4mdraHFaoB9"],[5,32,32]],[14,0,-54,[1,"92HQ0SV7hL15uM6T9MjXFp"],6]],[1,44.1,-41.744,0]],[5,"percent",33554432,6,[[3,-55,[1,"b9vLgY9nZF+po8NkXuSECZ"],[5,35.57,50.4]],[15,"%",40,-56,[1,"deFg0KMD9AIL/CEcAsghiH"]]],[1,16.125000000000004,0,0]],[6,"tips",33554432,2,[[[3,-57,[1,"8c5900YidNd4tMNv6Gd3yQ"],[5,186.67,50.4]],-58],4,1],[1,0,-200,0]],[9,"Main Light","c0y6F5f+pAvI805TdmxIjx",4,[[86,1.6927083333333335,-59,[42]]]],[9,"Camera","c9DMICJLFO5IeO07EPon7U",4,[[88,0.01,1822425087,-60,[4,4294967295]]]],[44,"car<ParticleSystem>",1.2,30,7,[1,"00fYwbvzhJHLgv8VLwBud4"],[3],[4],[2,15],[0],[0],[2,80],[0],[0],[2,45],[0],[2,0.5],[2,-5],[2,15],[0],[[16,[0]]],[48,true,[46,2,[4,4278650644],[4,4291026400]]],[50,true,8,0,[0]],[17,[47,3,20,5],[0],[0],[0]],[18,[0],[0],[0],[2,1]],[19,[0],[0],[0]],[20,[0],[0],[0],[0]],[21,[0],[0],[0]],[22,[0],[0]],[52,[0],[0],[4],[4],-61],[54,4]],[56,8,[1,"9bNpTi4DlI2qHhJ0x3LtTK"]],[41,"正在加载中...",32,32,16,[1,"0dC45bdoVNuYb2/xrusvTO"]],[90,2,[1,"d4G6OH7WRCppmhHVokz7eJ"],20,21],[82,"version<Label>","Version 1.0.0",2,0,40,9],[66,"UICamera_Canvas",1,[-62],[1,0,0,1000]],[43,0,1073741824,640,2000,0,42467328,24,[4,0]]],0,[0,0,1,0,3,25,0,0,1,0,4,22,0,10,23,0,0,1,0,0,1,0,-1,2,0,-2,9,0,-3,24,0,0,2,0,0,2,0,-3,22,0,0,2,0,-1,11,0,-2,3,0,-3,6,0,-4,16,0,0,3,0,0,3,0,0,3,0,-1,12,0,-2,7,0,-3,5,0,-1,10,0,-2,17,0,-3,18,0,0,5,0,0,5,0,-1,13,0,-2,14,0,0,6,0,0,6,0,-1,8,0,-2,15,0,-1,19,0,0,7,0,0,7,0,0,8,0,-2,20,0,0,8,0,0,9,0,-2,23,0,0,9,0,0,10,0,0,10,0,0,11,0,0,11,0,0,12,0,0,12,0,0,13,0,0,13,0,0,14,0,0,14,0,0,15,0,0,15,0,0,16,0,-2,21,0,0,17,0,0,18,0,2,19,0,-1,25,0,5,4,1,6,4,62],[0,0,0,0,0,0,0,0,0,0,0,0],[11,1,1,-1,7,1,1,1,1,-1,8,9],[10,2,3,4,5,0,0,6,7,1,1,8]],[[{"fmt":"0","w":0,"h":0},-1],[21],0,[],[],[]],[[{"base":"2,2,0,0,0,0","mipmaps":["842Di9nHxFh65EnhnNAF1U"]}],[22],0,[],[],[]],[[[92,"TrailModule02"],[59,"TrailModule02",[-2,-3],[23,"a8KUcggipAHoIZ9qqfYejW",-1,0]],[28,"TrailModule02",1,[-4],[23,"fcn7yiztNOVIH1tYt/9vS+",1,0],[1,0.18,0.1,0.5]],[45,1,2,[1,"02nluIw+hC9rc888NqDZWd"],[[null,0],0,6],[4],[0],[0],[0],[0],[0],[0],[0],[0],[2,2],[0],[0],[0],[[16,[2,1]]],[49,[4]],[51,0,8,0,[0]],[17,[0],[0],[0],[0]],[18,[0],[0],[0],[2,1]],[19,[0],[0],[0]],[20,[0],[0],[0],[0]],[21,[0],[0],[0]],[22,[0],[0]],[53,true,false,false,[2,0.8],[2,0.1],[4],[4],-5],[55,2]],[28,"TrailModule02",1,[-6],[23,"eemNW/m6NBJ5wfYnvnhePh",1,0],[1,-0.18,0.1,0.5]],[45,1,4,[1,"78L5giq1tJNqQ/RGrHOkzG"],[[null,1],0,6],[4],[0],[0],[0],[0],[0],[0],[0],[0],[2,2],[0],[0],[0],[[16,[2,1]]],[49,[4]],[51,0,8,0,[0]],[17,[0],[0],[0],[0]],[18,[0],[0],[0],[2,1]],[19,[0],[0],[0]],[20,[0],[0],[0],[0]],[21,[0],[0],[0]],[22,[0],[0]],[53,true,false,false,[2,0.8],[2,0.1],[4],[4],-7],[55,2]]],0,[0,12,1,0,-1,2,0,-2,4,0,-1,3,0,2,3,0,-1,5,0,2,5,0,13,1,7],[0,0],[-2,-2],[9,9]],[[[24,"main"],[63,"Canvas",33554432,"6fBTKAM9BJipWBL6z8kjmb",[-6,-7,-8,-9],[[[11,"Canvas<UITransform>",-1,[5,720,1280]],[30,"Canvas<Canvas>",-3,-2],-4,[31,45,-5]],4,4,1,4],[1,360,640,0]],[34,"main",[-10,-11,-12,-13,-14,-15,-16,-17,1],[35,"e96d6ae0-6179-4ac3-8969-a9b662fb0e9c"],[36,[77,90000,3.515625,[2,0.8392156862745098,0.9647058823529412,1,2.3437490625],[2,1,1,1,1],[2,0.8392156862745098,0.9647058823529412,1,0.520833125],[2,1,1,1,1]],[79,true,0.1,1,30,3.4641016151377544,0.2980392156862745],[37],[38,[4,4292993505]],[39]]],[64,"loading",33554432,1,[-23,-24,-25,-26],[[[7,"loading<UITransform>",-18,[1,"6egT/BrSlKg405gNCkflT7"],[5,720,1280]],[72,"loading<Widget>",45,100,100,1,-19,[1,"dbJsmv7ctEA4aorcjMmHdW"],1],-20,[75,"loading<Sprite>",false,-21,[1,"a8wJ9TALNCKLzrB8a1mLCr"]],[32,-22,10]],4,4,1,4,4]],[25,"loadingCar03",33554432,3,[-30,-31,-32],[[7,"loadingCar03<UITransform>",-27,[1,"a7WcN0fq9J7IWgUDveOVhh"],[5,144,26]],[12,"loadingCar03<Sprite>",0,-28,[1,"58if+HdgxAWotkP6c7jCW6"],7],[33,"loadingCar03<Animation>",true,-29,[1,"b4jN3SeUtIfq/2eCrd4Uxl"],[8],9]]],[8,"loadingCar01",33554432,4,[-35,-36],[[7,"loadingCar01<UITransform>",-33,[1,"baY4XPA1FHxKHorQo3zI2H"],[5,195,95]],[12,"loadingCar01<Sprite>",0,-34,[1,"30DA+hF0pIb6JxD4ix8pjh"],6]],[1,0,31.452999999999975,0]],[8,"progress",33554432,3,[-39,-40],[[3,-37,[1,"d9wzpk1Y1CMqurgnVCSvNF"],[5,57.82,40]],[81,1,1,-38,[1,"63QhzOb/5O3JnDQ5aawoBR"]]],[1,0,-130,0]],[5,"tip",33554432,1,[[68,-41,[5,253.37,50.4]],[83,"小提示：请用 login 场景运行",20,20,-42],[73,4,20,-43]],[1,0,-594.8,0]],[27,"car",33554432,4,[[-44,[40,-45,[1,"63uYVc5l5GWqZRWQthO5uW"]],[29,-46,[1,"85PiOe/atC2Z2BnFUO6mVA"]]],1,4,4],[1,97.689,-2.848,0],[3,0,-0.7071067811865475,0,0.7071067811865476],[1,0,-90,0]],[6,"progress",33554432,6,[[[3,-47,[1,"f1w+ZC3W9Kvoh057L4uTBX"],[5,22.25,50.4]],-48,[15,"0",40,-49,[1,"0a+q0IDYJIEZGVSmveekMQ"]]],4,1,4],[1,-17.785,0,0]],[93,"carManager<carManager>"],[5,"goldPos",33554432,1,[[11,"goldPos<UITransform>",-50,[5,50,50]],[74,"goldPos<Widget>",9,20,50,1,-51,1]],[1,-315,565,0]],[26,"bg",33554432,3,[[3,-52,[1,"8e3urAe8RKW7Ho4tDUzZZs"],[5,720,1600]],[13,2,false,-53,[1,"a3SFmkhdZERJkAKLx3XeW4"],0]]],[5,"shadow",33554432,4,[[3,-54,[1,"73JYvH2F1KG7G9jc2dWPUC"],[5,278,92]],[13,2,false,-55,[1,"f2STupipNAdalPambEYOIx"],1]],[1,0,-16.76,0]],[5,"loadingCar02",33554432,5,[[3,-56,[1,"5cWRCVuvBC36YNPQW3wTsA"],[5,32,32]],[14,0,-57,[1,"fd5ZZqgHtN8Kd9ih6KMnuN"],4]],[1,-49.023,-40.548,0]],[5,"loadingCar03",33554432,5,[[3,-58,[1,"0fVPFJU95G/KYlIfETIWAb"],[5,32,32]],[14,0,-59,[1,"d9QyOiAXVKlqj6KvNb6X8J"],5]],[1,44.1,-41.744,0]],[5,"percent",33554432,6,[[3,-60,[1,"2aBFG3oQhOgpO3xToxICCe"],[5,35.57,50.4]],[15,"%",40,-61,[1,"5a46w4sO1P8ayyjtb+k2gu"]]],[1,11.125,0,0]],[6,"tips",33554432,3,[[[3,-62,[1,"64daaEp6ZN9ZvTcZ+We0nx"],[5,186.67,50.4]],-63],4,1],[1,0,-200,0]],[65,"Camera","c9DMICJLFO5IeO07EPon7U",2,[[[89,"Camera<Camera>",0.01,200,1822425087,-64,[4,4278190080]],-65],4,1],[1,2,1,45],[3,0.5,0.5,-0.4999999999999999,0.5000000000000001],[1,90,90,0]],[60,"ground","74Ik+C9nFKIaaIMYem97us",2,[[94,-66,[1,10,0.00001,10]]],[1,100,1,100]],[9,"core","61pedcRJZHlZoG2orKlqVN",2,[[95,-71,-70,-69,-68,10,-67,19]]],[96,1,10,7],[67,"UICamera_Canvas",33554432,1,[-72],[1,0,0,1000]],[43,0,1073741824,640,2000,0,42467328,22,[4,0]],[44,"car<ParticleSystem>",1.2,30,8,[1,"b9x5A9ScBESaNmhvaAKrTB"],[2],[4],[2,15],[0],[0],[2,80],[0],[0],[2,45],[0],[2,0.5],[2,-5],[2,15],[0],[[16,[0]]],[48,true,[46,2,[4,4278650644],[4,4291026400]]],[50,true,8,0,[0]],[17,[47,3,20,5],[0],[0],[0]],[18,[0],[0],[0],[2,1]],[19,[0],[0],[0]],[20,[0],[0],[0],[0]],[21,[0],[0],[0]],[22,[0],[0]],[52,[0],[0],[4],[4],-73],[54,3]],[56,9,[1,"de4wdygStLtoBc0oB68x1j"]],[41,"正在加载中...",32,32,17,[1,"b1Dxx9oIFAfZ9DqvrGhziM"]],[91,"loading<loading>",3,[1,"0cNHwSQu5A97T6Qyqw3yRC"],25,26],[10,"carManager","41X1KWCiVAHKJosV8PvWHs",2,[10]],[97,"Camera<follow>",false,18,[1,0,8,8]],[98],[10,"map","da7mwPtl9Ng6We4DEm0Pdr",2,[30]],[99,"customerManager<customerManager>"],[10,"customerManager","b44AnqOxBAlZ82meUtOH7S",2,[32]],[100,10],[10,"effectManager","d5+yEjVkBNb7NGfRFMLdUX",2,[34]],[61,"Main Light","c0y6F5f+pAvI805TdmxIjx",2,[[87,"Main Light<DirectionalLight>",true,5264,20000,0.5208333333333334,-74,[4,4294833823],[42]]],[1,8.88,27.902,9.736],[3,-0.8197396846350875,0.11414891268284719,-0.03675812290240226,0.5600408159843199],[1,-110.858,3.981,-13.198]]],0,[0,0,1,0,3,23,0,0,1,0,-3,21,0,0,1,0,-1,11,0,-2,22,0,-3,3,0,-4,7,0,-1,20,0,-2,36,0,-3,18,0,-4,19,0,-5,31,0,-6,33,0,-7,35,0,-8,28,0,0,3,0,0,3,0,-3,27,0,0,3,0,0,3,0,-1,12,0,-2,4,0,-3,6,0,-4,17,0,0,4,0,0,4,0,0,4,0,-1,13,0,-2,8,0,-3,5,0,0,5,0,0,5,0,-1,14,0,-2,15,0,0,6,0,0,6,0,-1,9,0,-2,16,0,0,7,0,0,7,0,0,7,0,-1,24,0,0,8,0,0,8,0,0,9,0,-2,25,0,0,9,0,0,11,0,0,11,0,0,12,0,0,12,0,0,13,0,0,13,0,0,14,0,0,14,0,0,15,0,0,15,0,0,16,0,0,16,0,0,17,0,-2,26,0,0,18,0,-2,29,0,0,19,0,14,34,0,15,32,0,16,30,0,17,21,0,0,20,0,-1,23,0,2,24,0,0,36,0,5,2,1,6,2,10,18,29,10,0,28,21,4,27,30,0,31,32,0,33,34,0,35,74],[0,0,0,0,0,0,0,0,0,0,0,21,21,34],[1,1,-1,7,1,1,1,1,-1,8,9,19,20,21],[2,3,4,5,0,0,6,7,1,1,8,11,12,13]],[[[101,"1",[{"blendState":{"targets":[{}]},"depthStencilState":{},"rasterizerState":{}}],[{}],[[[{},"tintColor",8,[4,1180984420],"mainTexture",6,0]],11]]],0,0,[0,0],[22,23],[14,15]],[[[102,[[103,"ShadowFlow",[[104,"ShadowStage"]]],[105,"ForwardFlow",1,[[106,"ForwardStage",[[107,["default"]],[108,true,1,["default"]]]]]]]]],0,0,[],[],[]]]]
